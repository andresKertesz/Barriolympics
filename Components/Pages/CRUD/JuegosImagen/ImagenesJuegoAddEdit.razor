@using BarriolympicsRadzen.Data
@using BarriolympicsRadzen.Data.Models
@using Microsoft.EntityFrameworkCore

@inject ApplicationDbContext db
@inject DialogService dialog
@inject NotificationService notif

<RadzenRow Style="width:100%;height:auto">

    <RadzenRow Style="width:100%">
        <RadzenLabel Style="margin-top:auto;margin-bottom:auto;" Text="Juego" />
        <RadzenDropDown Data="Juegos" TextProperty="Nombre" ValueProperty="Id"
                        @bind-Value="@EditObject.JuegoId" Style="width:200px" />
    </RadzenRow>

    <RadzenRow Style="width:100%">
        <RadzenLabel Style="margin-top:auto;margin-bottom:auto;" Text="Descripción" />
        <RadzenTextBox @bind-Value="@EditObject.Descripcion" Style="width:200px" />
    </RadzenRow>

    <RadzenRow Style="width:100%">
        <RadzenLabel Style="margin-top:auto;margin-bottom:auto;" Text="URL Imagen" />
        <RadzenTextBox Style="width:200px" @bind-Value="@EditObject.Url" />
    </RadzenRow>

    <RadzenRow Style="width:100%">
        <RadzenButton Text="Aceptar" Icon="Save" Click=Accept ButtonStyle="ButtonStyle.Primary" />
        <RadzenButton Text="Cancelar" Icon="Cancel" ButtonStyle="ButtonStyle.Danger" Click="() => dialog.Close()" />
    </RadzenRow>

</RadzenRow>

@code {
    [Parameter] public bool EditMode { get; set; } = false;
    [Parameter] public ImagenesJuego EditObject { get; set; }

    private List<Juego> Juegos = new();

    protected override async Task OnParametersSetAsync()
    {
        if (EditMode && EditObject == null)
            throw new ArgumentException("EditMode necesita tener el objeto a editar...");

        if (EditObject == null)
        {
            EditObject = new ImagenesJuego
                {
                    Id = Guid.NewGuid()
                };
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Juegos = db.Juegos.AsNoTracking().ToList();
    }

    private async Task Accept(MouseEventArgs args)
    {
        try
        {
            if (EditMode)
            {
                db.ImagenesJuegos.Update(EditObject);
            }
            else
            {
                db.ImagenesJuegos.Add(EditObject);
            }

            await db.SaveChangesAsync();

            notif.Notify(new()
                {
                    CloseOnClick = true,
                    Summary = "Éxito",
                    Detail = "Cambios guardados correctamente."
                });

            dialog.Close();
        }
        catch (Exception ex)
        {
            notif.Notify(new()
                {
                    CloseOnClick = true,
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = ex.ToString()
                });
        }
    }
}
